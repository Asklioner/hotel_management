<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hotelmanagementbackgroud.dao.DataMapper">
  <resultMap id="BaseResultMap" type="com.example.hotelmanagementbackgroud.model.Data">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="homecode" jdbcType="VARCHAR" property="homecode" />
    <result column="intime" jdbcType="BIGINT" property="intime" />
    <result column="identity" jdbcType="VARCHAR" property="identity" />
    <result column="yuan" jdbcType="VARCHAR" property="yuan" />
    <result column="outtime" jdbcType="BIGINT" property="outtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, sex, homecode, intime, identity, yuan, outtime
  </sql>
  <select id="selectByExample" parameterType="com.example.hotelmanagementbackgroud.model.DataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'True' as QUERYID,
    <include refid="Base_Column_List" />
    from datapro
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from datapro
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from datapro
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.hotelmanagementbackgroud.model.DataExample">
    delete from datapro
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.hotelmanagementbackgroud.model.Data">
    insert into datapro (id, name, sex, 
      homecode, intime, identity, 
      yuan, outtime)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{homecode,jdbcType=VARCHAR}, #{intime,jdbcType=BIGINT}, #{identity,jdbcType=VARCHAR}, 
      #{yuan,jdbcType=VARCHAR}, #{outtime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.hotelmanagementbackgroud.model.Data">
    insert into datapro
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="homecode != null">
        homecode,
      </if>
      <if test="intime != null">
        intime,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="yuan != null">
        yuan,
      </if>
      <if test="outtime != null">
        outtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="homecode != null">
        #{homecode,jdbcType=VARCHAR},
      </if>
      <if test="intime != null">
        #{intime,jdbcType=BIGINT},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="yuan != null">
        #{yuan,jdbcType=VARCHAR},
      </if>
      <if test="outtime != null">
        #{outtime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.hotelmanagementbackgroud.model.DataExample" resultType="java.lang.Long">
    select count(*) from datapro
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update datapro
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.homecode != null">
        homecode = #{record.homecode,jdbcType=VARCHAR},
      </if>
      <if test="record.intime != null">
        intime = #{record.intime,jdbcType=BIGINT},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=VARCHAR},
      </if>
      <if test="record.yuan != null">
        yuan = #{record.yuan,jdbcType=VARCHAR},
      </if>
      <if test="record.outtime != null">
        outtime = #{record.outtime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update datapro
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      homecode = #{record.homecode,jdbcType=VARCHAR},
      intime = #{record.intime,jdbcType=BIGINT},
      identity = #{record.identity,jdbcType=VARCHAR},
      yuan = #{record.yuan,jdbcType=VARCHAR},
      outtime = #{record.outtime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.hotelmanagementbackgroud.model.Data">
    update datapro
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="homecode != null">
        homecode = #{homecode,jdbcType=VARCHAR},
      </if>
      <if test="intime != null">
        intime = #{intime,jdbcType=BIGINT},
      </if>
      <if test="identity != null">
        identity = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="yuan != null">
        yuan = #{yuan,jdbcType=VARCHAR},
      </if>
      <if test="outtime != null">
        outtime = #{outtime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.hotelmanagementbackgroud.model.Data">
    update datapro
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      homecode = #{homecode,jdbcType=VARCHAR},
      intime = #{intime,jdbcType=BIGINT},
      identity = #{identity,jdbcType=VARCHAR},
      yuan = #{yuan,jdbcType=VARCHAR},
      outtime = #{outtime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>